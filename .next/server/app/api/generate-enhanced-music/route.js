"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/generate-enhanced-music/route";
exports.ids = ["app/api/generate-enhanced-music/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate-enhanced-music%2Froute&page=%2Fapi%2Fgenerate-enhanced-music%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-enhanced-music%2Froute.ts&appDir=%2FUsers%2Fmanagobindasethi%2Fportal-ai-music%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmanagobindasethi%2Fportal-ai-music&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate-enhanced-music%2Froute&page=%2Fapi%2Fgenerate-enhanced-music%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-enhanced-music%2Froute.ts&appDir=%2FUsers%2Fmanagobindasethi%2Fportal-ai-music%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmanagobindasethi%2Fportal-ai-music&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_managobindasethi_portal_ai_music_src_app_api_generate_enhanced_music_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/generate-enhanced-music/route.ts */ \"(rsc)/./src/app/api/generate-enhanced-music/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/generate-enhanced-music/route\",\n        pathname: \"/api/generate-enhanced-music\",\n        filename: \"route\",\n        bundlePath: \"app/api/generate-enhanced-music/route\"\n    },\n    resolvedPagePath: \"/Users/managobindasethi/portal-ai-music/src/app/api/generate-enhanced-music/route.ts\",\n    nextConfigOutput,\n    userland: _Users_managobindasethi_portal_ai_music_src_app_api_generate_enhanced_music_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/generate-enhanced-music/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZnZW5lcmF0ZS1lbmhhbmNlZC1tdXNpYyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGZ2VuZXJhdGUtZW5oYW5jZWQtbXVzaWMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZnZW5lcmF0ZS1lbmhhbmNlZC1tdXNpYyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRm1hbmFnb2JpbmRhc2V0aGklMkZwb3J0YWwtYWktbXVzaWMlMkZzcmMlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGbWFuYWdvYmluZGFzZXRoaSUyRnBvcnRhbC1haS1tdXNpYyZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDb0M7QUFDakg7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0YWwtYWktbXVzaWMvPzc4NmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL21hbmFnb2JpbmRhc2V0aGkvcG9ydGFsLWFpLW11c2ljL3NyYy9hcHAvYXBpL2dlbmVyYXRlLWVuaGFuY2VkLW11c2ljL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9nZW5lcmF0ZS1lbmhhbmNlZC1tdXNpYy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2dlbmVyYXRlLWVuaGFuY2VkLW11c2ljXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9nZW5lcmF0ZS1lbmhhbmNlZC1tdXNpYy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9tYW5hZ29iaW5kYXNldGhpL3BvcnRhbC1haS1tdXNpYy9zcmMvYXBwL2FwaS9nZW5lcmF0ZS1lbmhhbmNlZC1tdXNpYy9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvZ2VuZXJhdGUtZW5oYW5jZWQtbXVzaWMvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate-enhanced-music%2Froute&page=%2Fapi%2Fgenerate-enhanced-music%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-enhanced-music%2Froute.ts&appDir=%2FUsers%2Fmanagobindasethi%2Fportal-ai-music%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmanagobindasethi%2Fportal-ai-music&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/generate-enhanced-music/route.ts":
/*!******************************************************!*\
  !*** ./src/app/api/generate-enhanced-music/route.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _services_aiMusicService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/services/aiMusicService */ \"(rsc)/./src/services/aiMusicService.ts\");\n\n\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const { prompt = \"\", lyrics = \"\", mood = \"upbeat\", genre = \"pop\", instruments = [\n            \"piano\"\n        ], tempo_bpm = 120, duration = 30, output_format = \"wav\", export_stems = false, style_complexity = \"moderate\", key = \"C\", structure = [], template = \"\" } = body;\n        // Validate input\n        if (!instruments || instruments.length === 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"At least one instrument is required\"\n            }, {\n                status: 400\n            });\n        }\n        // Initialize AI music service\n        const musicService = new _services_aiMusicService__WEBPACK_IMPORTED_MODULE_1__.MusicGenerationService();\n        // Create comprehensive prompt from all inputs\n        const comprehensivePrompt = prompt || `Create a ${genre} song in ${key} major with ${mood} mood, featuring ${instruments.join(\", \")}, at ${tempo_bpm} BPM for ${duration} seconds`;\n        // Generate enhanced music using AI service\n        const result = await musicService.generateMusic({\n            prompt: comprehensivePrompt,\n            genre,\n            mood,\n            duration,\n            instruments,\n            structure,\n            template,\n            bpm: tempo_bpm,\n            key\n        });\n        if (!result.success) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: result.error || \"Failed to generate enhanced music\"\n            }, {\n                status: 500\n            });\n        }\n        // If generation is immediate (mock provider)\n        if (result.status === \"completed\" && result.audioUrl) {\n            const trackId = result.trackId;\n            const enhancedTrack = {\n                id: trackId,\n                title: `${genre?.charAt(0).toUpperCase() + genre?.slice(1)} Composition`,\n                lyrics: lyrics,\n                genre: genre,\n                mood: mood,\n                instruments: instruments,\n                tempo_bpm: tempo_bpm,\n                duration: duration,\n                key: key,\n                structure: structure.join(\"-\") || \"intro-verse-chorus-outro\",\n                url: result.audioUrl,\n                download_url: result.audioUrl,\n                audio_file: `${trackId}.wav`,\n                output_format: output_format,\n                export_stems: export_stems,\n                style_complexity: style_complexity,\n                template: template,\n                waveform: Array.from({\n                    length: 100\n                }, ()=>Math.random() * 100),\n                created_at: new Date().toISOString(),\n                status: \"completed\",\n                metadata: {\n                    lyrics: lyrics,\n                    genre: genre,\n                    mood: mood,\n                    instruments: instruments,\n                    tempo_bpm: tempo_bpm,\n                    duration: duration,\n                    key: key,\n                    structure: structure.join(\"-\") || \"intro-verse-chorus-outro\",\n                    style_complexity: style_complexity,\n                    title: `${genre?.charAt(0).toUpperCase() + genre?.slice(1)} Composition`,\n                    filename: `${trackId}.wav`\n                }\n            };\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                track: enhancedTrack,\n                download_url: enhancedTrack.download_url,\n                audio_file: enhancedTrack.audio_file,\n                metadata: enhancedTrack.metadata,\n                message: \"Enhanced composition generated successfully!\"\n            });\n        }\n        // If generation is async (real AI providers)\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            trackId: result.trackId,\n            status: result.status,\n            estimatedTime: result.estimatedTime,\n            message: \"Enhanced music generation started. Use the polling endpoint to check status.\",\n            pollUrl: `/api/poll-generation/${result.trackId}`\n        });\n    } catch (error) {\n        console.error(\"Enhanced music generation error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/generate-enhanced-music/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/services/aiMusicService.ts":
/*!****************************************!*\
  !*** ./src/services/aiMusicService.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MusicGenerationService: () => (/* binding */ MusicGenerationService)\n/* harmony export */ });\n// AI Music Generation Service Layer\n// This handles integration with various AI music generation providers\nclass MubertProvider {\n    constructor(apiKey, patToken){\n        this.apiKey = apiKey;\n        this.patToken = patToken;\n    }\n    async generateMusic(request) {\n        try {\n            const response = await fetch(\"https://api.mubert.com/v2/RecordTrack\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    method: \"RecordTrack\",\n                    params: {\n                        pat: this.patToken,\n                        duration: request.duration || 30,\n                        tags: `${request.genre || \"electronic\"},${request.mood || \"energetic\"}`,\n                        mode: \"loop\",\n                        bitrate: 320\n                    }\n                })\n            });\n            const data = await response.json();\n            if (data.error) {\n                throw new Error(data.error.message || \"Mubert API error\");\n            }\n            return {\n                success: true,\n                trackId: data.data.id,\n                status: \"processing\",\n                estimatedTime: request.duration || 30\n            };\n        } catch (error) {\n            return {\n                success: false,\n                trackId: \"\",\n                status: \"failed\",\n                error: error.message\n            };\n        }\n    }\n    async pollGeneration(trackId) {\n        try {\n            const response = await fetch(\"https://api.mubert.com/v2/TrackStatus\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    method: \"TrackStatus\",\n                    params: {\n                        pat: this.patToken,\n                        track_id: trackId\n                    }\n                })\n            });\n            const data = await response.json();\n            if (data.error) {\n                return {\n                    success: false,\n                    status: \"failed\",\n                    error: data.error.message\n                };\n            }\n            const status = data.data.status;\n            const audioUrl = data.data.download_url;\n            return {\n                success: true,\n                status: status === \"ready\" ? \"completed\" : \"processing\",\n                audioUrl: status === \"ready\" ? audioUrl : undefined,\n                progress: status === \"ready\" ? 100 : undefined\n            };\n        } catch (error) {\n            return {\n                success: false,\n                status: \"failed\",\n                error: error.message\n            };\n        }\n    }\n}\nclass SunoProvider {\n    constructor(apiKey){\n        this.apiKey = apiKey;\n    }\n    async generateMusic(request) {\n        try {\n            const response = await fetch(\"https://api.suno.ai/generate\", {\n                method: \"POST\",\n                headers: {\n                    \"Authorization\": `Bearer ${this.apiKey}`,\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    prompt: request.prompt,\n                    duration: request.duration || 30,\n                    genre: request.genre,\n                    mood: request.mood,\n                    instruments: request.instruments\n                })\n            });\n            const data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.error || \"Suno API error\");\n            }\n            return {\n                success: true,\n                trackId: data.id,\n                status: \"processing\",\n                estimatedTime: 60 // Suno typically takes ~60 seconds\n            };\n        } catch (error) {\n            return {\n                success: false,\n                trackId: \"\",\n                status: \"failed\",\n                error: error.message\n            };\n        }\n    }\n    async pollGeneration(trackId) {\n        try {\n            const response = await fetch(`https://api.suno.ai/status/${trackId}`, {\n                headers: {\n                    \"Authorization\": `Bearer ${this.apiKey}`\n                }\n            });\n            const data = await response.json();\n            if (!response.ok) {\n                return {\n                    success: false,\n                    status: \"failed\",\n                    error: data.error || \"Suno API error\"\n                };\n            }\n            return {\n                success: true,\n                status: data.status === \"completed\" ? \"completed\" : \"processing\",\n                audioUrl: data.status === \"completed\" ? data.audio_url : undefined,\n                progress: data.progress\n            };\n        } catch (error) {\n            return {\n                success: false,\n                status: \"failed\",\n                error: error.message\n            };\n        }\n    }\n}\nclass MockProvider {\n    async generateMusic(request) {\n        // Simulate processing time\n        await new Promise((resolve)=>setTimeout(resolve, 2000));\n        const trackId = `mock_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n        return {\n            success: true,\n            trackId,\n            status: \"completed\",\n            audioUrl: \"http://localhost:3000/api/demo-audio\"\n        };\n    }\n    async pollGeneration(trackId) {\n        return {\n            success: true,\n            status: \"completed\",\n            audioUrl: \"http://localhost:3000/api/demo-audio\",\n            progress: 100\n        };\n    }\n}\nclass MusicGenerationService {\n    constructor(){\n        const providerType = process.env.AI_MUSIC_PROVIDER || \"mock\";\n        switch(providerType){\n            case \"mubert\":\n                if (!process.env.MUBERT_API_KEY || !process.env.MUBERT_PAT_TOKEN) {\n                    console.warn(\"Mubert credentials not found, falling back to mock provider\");\n                    this.provider = new MockProvider();\n                } else {\n                    this.provider = new MubertProvider(process.env.MUBERT_API_KEY, process.env.MUBERT_PAT_TOKEN);\n                }\n                break;\n            case \"suno\":\n                if (!process.env.SUNO_API_KEY) {\n                    console.warn(\"Suno API key not found, falling back to mock provider\");\n                    this.provider = new MockProvider();\n                } else {\n                    this.provider = new SunoProvider(process.env.SUNO_API_KEY);\n                }\n                break;\n            default:\n                this.provider = new MockProvider();\n        }\n    }\n    async generateMusic(request) {\n        return this.provider.generateMusic(request);\n    }\n    async pollGeneration(trackId) {\n        return this.provider.pollGeneration(trackId);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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aEM7Z0JBQ0E7WUFFRixLQUFLO2dCQUNILElBQUksQ0FBQ0osUUFBUUMsR0FBRyxDQUFDTyxZQUFZLEVBQUU7b0JBQzdCSCxRQUFRQyxJQUFJLENBQUM7b0JBQ2IsSUFBSSxDQUFDQyxRQUFRLEdBQUcsSUFBSW5CO2dCQUN0QixPQUFPO29CQUNMLElBQUksQ0FBQ21CLFFBQVEsR0FBRyxJQUFJeEIsYUFBYWlCLFFBQVFDLEdBQUcsQ0FBQ08sWUFBWTtnQkFDM0Q7Z0JBQ0E7WUFFRjtnQkFDRSxJQUFJLENBQUNELFFBQVEsR0FBRyxJQUFJbkI7UUFDeEI7SUFDRjtJQUVBLE1BQU10QyxjQUFjQyxPQUErQixFQUFvQztRQUNyRixPQUFPLElBQUksQ0FBQ3dELFFBQVEsQ0FBQ3pELGFBQWEsQ0FBQ0M7SUFDckM7SUFFQSxNQUFNMEIsZUFBZUosT0FBZSxFQUE0QjtRQUM5RCxPQUFPLElBQUksQ0FBQ2tDLFFBQVEsQ0FBQzlCLGNBQWMsQ0FBQ0o7SUFDdEM7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRhbC1haS1tdXNpYy8uL3NyYy9zZXJ2aWNlcy9haU11c2ljU2VydmljZS50cz81ZDA3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEFJIE11c2ljIEdlbmVyYXRpb24gU2VydmljZSBMYXllclxuLy8gVGhpcyBoYW5kbGVzIGludGVncmF0aW9uIHdpdGggdmFyaW91cyBBSSBtdXNpYyBnZW5lcmF0aW9uIHByb3ZpZGVyc1xuXG5leHBvcnQgaW50ZXJmYWNlIE11c2ljR2VuZXJhdGlvblJlcXVlc3Qge1xuICBwcm9tcHQ6IHN0cmluZztcbiAgZ2VucmU/OiBzdHJpbmc7XG4gIG1vb2Q/OiBzdHJpbmc7XG4gIGR1cmF0aW9uPzogbnVtYmVyO1xuICBpbnN0cnVtZW50cz86IHN0cmluZ1tdO1xuICBzdHJ1Y3R1cmU/OiBzdHJpbmdbXTtcbiAgdGVtcGxhdGU/OiBzdHJpbmc7XG4gIGJwbT86IG51bWJlcjtcbiAga2V5Pzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE11c2ljR2VuZXJhdGlvblJlc3BvbnNlIHtcbiAgc3VjY2VzczogYm9vbGVhbjtcbiAgdHJhY2tJZDogc3RyaW5nO1xuICBhdWRpb1VybD86IHN0cmluZztcbiAgc3RhdHVzOiAncHJvY2Vzc2luZycgfCAnY29tcGxldGVkJyB8ICdmYWlsZWQnO1xuICBlc3RpbWF0ZWRUaW1lPzogbnVtYmVyO1xuICBlcnJvcj86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQb2xsaW5nUmVzcG9uc2Uge1xuICBzdWNjZXNzOiBib29sZWFuO1xuICBzdGF0dXM6ICdwcm9jZXNzaW5nJyB8ICdjb21wbGV0ZWQnIHwgJ2ZhaWxlZCc7XG4gIGF1ZGlvVXJsPzogc3RyaW5nO1xuICBwcm9ncmVzcz86IG51bWJlcjtcbiAgZXJyb3I/OiBzdHJpbmc7XG59XG5cbmNsYXNzIE11YmVydFByb3ZpZGVyIHtcbiAgcHJpdmF0ZSBhcGlLZXk6IHN0cmluZztcbiAgcHJpdmF0ZSBwYXRUb2tlbjogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKGFwaUtleTogc3RyaW5nLCBwYXRUb2tlbjogc3RyaW5nKSB7XG4gICAgdGhpcy5hcGlLZXkgPSBhcGlLZXk7XG4gICAgdGhpcy5wYXRUb2tlbiA9IHBhdFRva2VuO1xuICB9XG5cbiAgYXN5bmMgZ2VuZXJhdGVNdXNpYyhyZXF1ZXN0OiBNdXNpY0dlbmVyYXRpb25SZXF1ZXN0KTogUHJvbWlzZTxNdXNpY0dlbmVyYXRpb25SZXNwb25zZT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwczovL2FwaS5tdWJlcnQuY29tL3YyL1JlY29yZFRyYWNrJywge1xuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgIH0sXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICBtZXRob2Q6ICdSZWNvcmRUcmFjaycsXG4gICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICBwYXQ6IHRoaXMucGF0VG9rZW4sXG4gICAgICAgICAgICBkdXJhdGlvbjogcmVxdWVzdC5kdXJhdGlvbiB8fCAzMCxcbiAgICAgICAgICAgIHRhZ3M6IGAke3JlcXVlc3QuZ2VucmUgfHwgJ2VsZWN0cm9uaWMnfSwke3JlcXVlc3QubW9vZCB8fCAnZW5lcmdldGljJ31gLFxuICAgICAgICAgICAgbW9kZTogJ2xvb3AnLFxuICAgICAgICAgICAgYml0cmF0ZTogMzIwXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgfSk7XG5cbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cbiAgICAgIGlmIChkYXRhLmVycm9yKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihkYXRhLmVycm9yLm1lc3NhZ2UgfHwgJ011YmVydCBBUEkgZXJyb3InKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgdHJhY2tJZDogZGF0YS5kYXRhLmlkLFxuICAgICAgICBzdGF0dXM6ICdwcm9jZXNzaW5nJyxcbiAgICAgICAgZXN0aW1hdGVkVGltZTogcmVxdWVzdC5kdXJhdGlvbiB8fCAzMFxuICAgICAgfTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIHRyYWNrSWQ6ICcnLFxuICAgICAgICBzdGF0dXM6ICdmYWlsZWQnLFxuICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZVxuICAgICAgfTtcbiAgICB9XG4gIH1cblxuICBhc3luYyBwb2xsR2VuZXJhdGlvbih0cmFja0lkOiBzdHJpbmcpOiBQcm9taXNlPFBvbGxpbmdSZXNwb25zZT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwczovL2FwaS5tdWJlcnQuY29tL3YyL1RyYWNrU3RhdHVzJywge1xuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgIH0sXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICBtZXRob2Q6ICdUcmFja1N0YXR1cycsXG4gICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICBwYXQ6IHRoaXMucGF0VG9rZW4sXG4gICAgICAgICAgICB0cmFja19pZDogdHJhY2tJZFxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgIH0pO1xuXG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuXG4gICAgICBpZiAoZGF0YS5lcnJvcikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgIHN0YXR1czogJ2ZhaWxlZCcsXG4gICAgICAgICAgZXJyb3I6IGRhdGEuZXJyb3IubWVzc2FnZVxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICBjb25zdCBzdGF0dXMgPSBkYXRhLmRhdGEuc3RhdHVzO1xuICAgICAgY29uc3QgYXVkaW9VcmwgPSBkYXRhLmRhdGEuZG93bmxvYWRfdXJsO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICBzdGF0dXM6IHN0YXR1cyA9PT0gJ3JlYWR5JyA/ICdjb21wbGV0ZWQnIDogJ3Byb2Nlc3NpbmcnLFxuICAgICAgICBhdWRpb1VybDogc3RhdHVzID09PSAncmVhZHknID8gYXVkaW9VcmwgOiB1bmRlZmluZWQsXG4gICAgICAgIHByb2dyZXNzOiBzdGF0dXMgPT09ICdyZWFkeScgPyAxMDAgOiB1bmRlZmluZWRcbiAgICAgIH07XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBzdGF0dXM6ICdmYWlsZWQnLFxuICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZVxuICAgICAgfTtcbiAgICB9XG4gIH1cbn1cblxuY2xhc3MgU3Vub1Byb3ZpZGVyIHtcbiAgcHJpdmF0ZSBhcGlLZXk6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihhcGlLZXk6IHN0cmluZykge1xuICAgIHRoaXMuYXBpS2V5ID0gYXBpS2V5O1xuICB9XG5cbiAgYXN5bmMgZ2VuZXJhdGVNdXNpYyhyZXF1ZXN0OiBNdXNpY0dlbmVyYXRpb25SZXF1ZXN0KTogUHJvbWlzZTxNdXNpY0dlbmVyYXRpb25SZXNwb25zZT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwczovL2FwaS5zdW5vLmFpL2dlbmVyYXRlJywge1xuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICdBdXRob3JpemF0aW9uJzogYEJlYXJlciAke3RoaXMuYXBpS2V5fWAsXG4gICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgIHByb21wdDogcmVxdWVzdC5wcm9tcHQsXG4gICAgICAgICAgZHVyYXRpb246IHJlcXVlc3QuZHVyYXRpb24gfHwgMzAsXG4gICAgICAgICAgZ2VucmU6IHJlcXVlc3QuZ2VucmUsXG4gICAgICAgICAgbW9vZDogcmVxdWVzdC5tb29kLFxuICAgICAgICAgIGluc3RydW1lbnRzOiByZXF1ZXN0Lmluc3RydW1lbnRzXG4gICAgICAgIH0pXG4gICAgICB9KTtcblxuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcblxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZGF0YS5lcnJvciB8fCAnU3VubyBBUEkgZXJyb3InKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgdHJhY2tJZDogZGF0YS5pZCxcbiAgICAgICAgc3RhdHVzOiAncHJvY2Vzc2luZycsXG4gICAgICAgIGVzdGltYXRlZFRpbWU6IDYwIC8vIFN1bm8gdHlwaWNhbGx5IHRha2VzIH42MCBzZWNvbmRzXG4gICAgICB9O1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgdHJhY2tJZDogJycsXG4gICAgICAgIHN0YXR1czogJ2ZhaWxlZCcsXG4gICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIHBvbGxHZW5lcmF0aW9uKHRyYWNrSWQ6IHN0cmluZyk6IFByb21pc2U8UG9sbGluZ1Jlc3BvbnNlPiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vYXBpLnN1bm8uYWkvc3RhdHVzLyR7dHJhY2tJZH1gLCB7XG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAnQXV0aG9yaXphdGlvbic6IGBCZWFyZXIgJHt0aGlzLmFwaUtleX1gLFxuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcblxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgIHN0YXR1czogJ2ZhaWxlZCcsXG4gICAgICAgICAgZXJyb3I6IGRhdGEuZXJyb3IgfHwgJ1N1bm8gQVBJIGVycm9yJ1xuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICBzdGF0dXM6IGRhdGEuc3RhdHVzID09PSAnY29tcGxldGVkJyA/ICdjb21wbGV0ZWQnIDogJ3Byb2Nlc3NpbmcnLFxuICAgICAgICBhdWRpb1VybDogZGF0YS5zdGF0dXMgPT09ICdjb21wbGV0ZWQnID8gZGF0YS5hdWRpb191cmwgOiB1bmRlZmluZWQsXG4gICAgICAgIHByb2dyZXNzOiBkYXRhLnByb2dyZXNzXG4gICAgICB9O1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgc3RhdHVzOiAnZmFpbGVkJyxcbiAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2VcbiAgICAgIH07XG4gICAgfVxuICB9XG59XG5cbmNsYXNzIE1vY2tQcm92aWRlciB7XG4gIGFzeW5jIGdlbmVyYXRlTXVzaWMocmVxdWVzdDogTXVzaWNHZW5lcmF0aW9uUmVxdWVzdCk6IFByb21pc2U8TXVzaWNHZW5lcmF0aW9uUmVzcG9uc2U+IHtcbiAgICAvLyBTaW11bGF0ZSBwcm9jZXNzaW5nIHRpbWVcbiAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMjAwMCkpO1xuXG4gICAgY29uc3QgdHJhY2tJZCA9IGBtb2NrXyR7RGF0ZS5ub3coKX1fJHtNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgOSl9YDtcblxuICAgIHJldHVybiB7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgdHJhY2tJZCxcbiAgICAgIHN0YXR1czogJ2NvbXBsZXRlZCcsXG4gICAgICBhdWRpb1VybDogJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvZGVtby1hdWRpbydcbiAgICB9O1xuICB9XG5cbiAgYXN5bmMgcG9sbEdlbmVyYXRpb24odHJhY2tJZDogc3RyaW5nKTogUHJvbWlzZTxQb2xsaW5nUmVzcG9uc2U+IHtcbiAgICByZXR1cm4ge1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIHN0YXR1czogJ2NvbXBsZXRlZCcsXG4gICAgICBhdWRpb1VybDogJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvZGVtby1hdWRpbycsXG4gICAgICBwcm9ncmVzczogMTAwXG4gICAgfTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgTXVzaWNHZW5lcmF0aW9uU2VydmljZSB7XG4gIHByaXZhdGUgcHJvdmlkZXI6IE11YmVydFByb3ZpZGVyIHwgU3Vub1Byb3ZpZGVyIHwgTW9ja1Byb3ZpZGVyO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGNvbnN0IHByb3ZpZGVyVHlwZSA9IHByb2Nlc3MuZW52LkFJX01VU0lDX1BST1ZJREVSIHx8ICdtb2NrJztcblxuICAgIHN3aXRjaCAocHJvdmlkZXJUeXBlKSB7XG4gICAgICBjYXNlICdtdWJlcnQnOlxuICAgICAgICBpZiAoIXByb2Nlc3MuZW52Lk1VQkVSVF9BUElfS0VZIHx8ICFwcm9jZXNzLmVudi5NVUJFUlRfUEFUX1RPS0VOKSB7XG4gICAgICAgICAgY29uc29sZS53YXJuKCdNdWJlcnQgY3JlZGVudGlhbHMgbm90IGZvdW5kLCBmYWxsaW5nIGJhY2sgdG8gbW9jayBwcm92aWRlcicpO1xuICAgICAgICAgIHRoaXMucHJvdmlkZXIgPSBuZXcgTW9ja1Byb3ZpZGVyKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5wcm92aWRlciA9IG5ldyBNdWJlcnRQcm92aWRlcihcbiAgICAgICAgICAgIHByb2Nlc3MuZW52Lk1VQkVSVF9BUElfS0VZLFxuICAgICAgICAgICAgcHJvY2Vzcy5lbnYuTVVCRVJUX1BBVF9UT0tFTlxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBcbiAgICAgIGNhc2UgJ3N1bm8nOlxuICAgICAgICBpZiAoIXByb2Nlc3MuZW52LlNVTk9fQVBJX0tFWSkge1xuICAgICAgICAgIGNvbnNvbGUud2FybignU3VubyBBUEkga2V5IG5vdCBmb3VuZCwgZmFsbGluZyBiYWNrIHRvIG1vY2sgcHJvdmlkZXInKTtcbiAgICAgICAgICB0aGlzLnByb3ZpZGVyID0gbmV3IE1vY2tQcm92aWRlcigpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMucHJvdmlkZXIgPSBuZXcgU3Vub1Byb3ZpZGVyKHByb2Nlc3MuZW52LlNVTk9fQVBJX0tFWSk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRoaXMucHJvdmlkZXIgPSBuZXcgTW9ja1Byb3ZpZGVyKCk7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgZ2VuZXJhdGVNdXNpYyhyZXF1ZXN0OiBNdXNpY0dlbmVyYXRpb25SZXF1ZXN0KTogUHJvbWlzZTxNdXNpY0dlbmVyYXRpb25SZXNwb25zZT4ge1xuICAgIHJldHVybiB0aGlzLnByb3ZpZGVyLmdlbmVyYXRlTXVzaWMocmVxdWVzdCk7XG4gIH1cblxuICBhc3luYyBwb2xsR2VuZXJhdGlvbih0cmFja0lkOiBzdHJpbmcpOiBQcm9taXNlPFBvbGxpbmdSZXNwb25zZT4ge1xuICAgIHJldHVybiB0aGlzLnByb3ZpZGVyLnBvbGxHZW5lcmF0aW9uKHRyYWNrSWQpO1xuICB9XG59XG4iXSwibmFtZXMiOlsiTXViZXJ0UHJvdmlkZXIiLCJjb25zdHJ1Y3RvciIsImFwaUtleSIsInBhdFRva2VuIiwiZ2VuZXJhdGVNdXNpYyIsInJlcXVlc3QiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwicGFyYW1zIiwicGF0IiwiZHVyYXRpb24iLCJ0YWdzIiwiZ2VucmUiLCJtb29kIiwibW9kZSIsImJpdHJhdGUiLCJkYXRhIiwianNvbiIsImVycm9yIiwiRXJyb3IiLCJtZXNzYWdlIiwic3VjY2VzcyIsInRyYWNrSWQiLCJpZCIsInN0YXR1cyIsImVzdGltYXRlZFRpbWUiLCJwb2xsR2VuZXJhdGlvbiIsInRyYWNrX2lkIiwiYXVkaW9VcmwiLCJkb3dubG9hZF91cmwiLCJ1bmRlZmluZWQiLCJwcm9ncmVzcyIsIlN1bm9Qcm92aWRlciIsInByb21wdCIsImluc3RydW1lbnRzIiwib2siLCJhdWRpb191cmwiLCJNb2NrUHJvdmlkZXIiLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJEYXRlIiwibm93IiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwic3Vic3RyIiwiTXVzaWNHZW5lcmF0aW9uU2VydmljZSIsInByb3ZpZGVyVHlwZSIsInByb2Nlc3MiLCJlbnYiLCJBSV9NVVNJQ19QUk9WSURFUiIsIk1VQkVSVF9BUElfS0VZIiwiTVVCRVJUX1BBVF9UT0tFTiIsImNvbnNvbGUiLCJ3YXJuIiwicHJvdmlkZXIiLCJTVU5PX0FQSV9LRVkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/services/aiMusicService.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@opentelemetry"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate-enhanced-music%2Froute&page=%2Fapi%2Fgenerate-enhanced-music%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-enhanced-music%2Froute.ts&appDir=%2FUsers%2Fmanagobindasethi%2Fportal-ai-music%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmanagobindasethi%2Fportal-ai-music&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();